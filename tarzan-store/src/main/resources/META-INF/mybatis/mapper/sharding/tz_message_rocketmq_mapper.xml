<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="RocketMQMessageMapper">
  <resultMap id="BaseResultMap" type="RocketMQMessage" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="message_key" property="messageKey" jdbcType="VARCHAR" />
    <result column="producer_group" property="producerGroup" jdbcType="VARCHAR" />
    <result column="transaction_state" property="transactionState" jdbcType="TINYINT" />
    <result column="send_status" property="sendStatus" jdbcType="TINYINT" />
    <result column="has_aggregated" property="hasAggregated" jdbcType="BIT" />
    <result column="message_id" property="messageId" jdbcType="VARCHAR" />
    <result column="message_body" property="messageBody" jdbcType="VARBINARY" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="topic" property="topic" jdbcType="VARCHAR" />
    <result column="tags" property="tags" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, message_key, producer_group, transaction_state, send_status, has_aggregated,
    message_id, message_body, create_time, modify_time, topic, tags
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from tz_message_rocketmq
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByPrimaryKeys" resultMap="BaseResultMap" parameterType="java.util.List" >
    select
    <include refid="Base_Column_List" />
    from tz_message_rocketmq
    where id in
    <foreach collection="list" item="id" open="(" close=")"  separator=",">
      #{id, jdbcType=BIGINT}
    </foreach>
    order by id asc
  </select>
  
  <insert id="insert" parameterType="RocketMQMessage" >
    insert into tz_message_rocketmq (id, message_key, producer_group, 
      transaction_state, send_status, has_aggregated,
      message_id, message_body,
      create_time, modify_time,
      topic, tags
      )
    values (#{id,jdbcType=BIGINT}, #{messageKey,jdbcType=VARCHAR}, #{producerGroup,jdbcType=VARCHAR},
      #{transactionState,jdbcType=TINYINT}, #{sendStatus,jdbcType=TINYINT}, #{hasAggregated,jdbcType=BIT},
      #{messageId,jdbcType=VARCHAR}, #{messageBody,jdbcType=VARBINARY},
      now(), #{modifyTime,jdbcType=TIMESTAMP},
      #{topic,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR}
      )
  </insert>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tz_message_rocketmq
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <update id="updateByPrimaryKeySelective" parameterType="RocketMQMessage" >
    update tz_message_rocketmq
    <set >
      <if test="messageKey != null" >
        message_key = #{messageKey,jdbcType=VARCHAR},
      </if>
      <if test="messageBody != null" >
        message_body = #{messageBody,jdbcType=VARBINARY},
      </if>
      <if test="transactionState != null" >
        transaction_state = #{transactionState,jdbcType=TINYINT},
      </if>
      <if test="sendStatus != null" >
        send_status = #{sendStatus,jdbcType=TINYINT},
      </if>
      <if test="hasAggregated != null" >
        has_aggregated = #{hasAggregated,jdbcType=BIT},
      </if>
      <if test="messageId != null" >
        message_id = #{messageId,jdbcType=VARCHAR},
      </if>
      modify_time = now()
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="MQMessageQuery" >
    select 
    <include refid="Base_Column_List" />
    from tz_message_rocketmq
    <where >
      <include refid="Where_Condition" />
    </where>
    order by id asc
    <if test="pagingParam != null">
      limit #{pagingParam.offset},#{pagingParam.limit}
    </if>
  </select>
  
  <sql id="Where_Condition">
    <if test="messageKey != null" >
      and message_key = #{messageKey,jdbcType=VARCHAR}
    </if>
    <if test="transactionState != null" >
      and transaction_state = #{transactionState,jdbcType=TINYINT}
    </if>
    <if test="sendStatusList != null" >
      and send_status in
      <foreach collection="sendStatusList" item="sendStatus" open="(" close=")"  separator=",">
        #{sendStatus, jdbcType=TINYINT}
      </foreach>
    </if>
    <if test="hasAggregated != null" >
      and has_aggregated = #{hasAggregated,jdbcType=BIT}
    </if>
    <if test="createTimeFromInclude != null" >
      <![CDATA[
        and create_time >= #{createTimeFromInclude,jdbcType=TIMESTAMP}
      ]]>
    </if>
    <if test="createTimeToExclude != null" >
      <![CDATA[
        and create_time < #{createTimeToExclude,jdbcType=TIMESTAMP}
      ]]>
    </if>
  </sql>
  
  <select id="countByCondition" resultType="int" parameterType="MQMessageQuery" >
    select count(1) from tz_message_rocketmq
    <where >
      <include refid="Where_Condition" />
    </where>i
  </select>

  <select id="getEarliestCreateTime" resultType="java.util.Date" >
    select create_time
    from tz_message_rocketmq
    order by create_time asc limit 1
  </select>
  
</mapper>